"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Step = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
const core_1 = require("@aws-cdk/core");
/**
 * A generic Step which can be added to a Pipeline.
 *
 * Steps can be used to add Sources, Build Actions and Validations
 * to your pipeline.
 *
 * This class is abstract. See specific subclasses of Step for
 * useful steps to add to your Pipeline
 *
 * @stability stable
 */
class Step {
    /**
     * @param id Identifier for this step.
     * @stability stable
     */
    constructor(
    /** Identifier for this step */
    id) {
        this.id = id;
        /**
         * The list of FileSets consumed by this Step.
         *
         * @stability stable
         */
        this.dependencyFileSets = [];
        /**
         * Whether or not this is a Source step.
         *
         * What it means to be a Source step depends on the engine.
         *
         * @stability stable
         */
        this.isSource = false;
        if (core_1.Token.isUnresolved(id)) {
            throw new Error(`Step id cannot be unresolved, got '${id}'`);
        }
    }
    /**
     * Return the steps this step depends on, based on the FileSets it requires.
     *
     * @stability stable
     */
    get dependencies() {
        return this.dependencyFileSets.map(f => f.producer);
    }
    /**
     * Return a string representation of this Step.
     *
     * @stability stable
     */
    toString() {
        return `${this.constructor.name}(${this.id})`;
    }
    /**
     * The primary FileSet produced by this Step.
     *
     * Not all steps produce an output FileSet--if they do
     * you can substitute the `Step` object for the `FileSet` object.
     *
     * @stability stable
     */
    get primaryOutput() {
        // Accessor so it can be mutable in children
        return this._primaryOutput;
    }
    /**
     * Add an additional FileSet to the set of file sets required by this step.
     *
     * This will lead to a dependency on the producer of that file set.
     *
     * @stability stable
     */
    addDependencyFileSet(fs) {
        this.dependencyFileSets.push(fs);
    }
    /**
     * Configure the given FileSet as the primary output of this step.
     *
     * @stability stable
     */
    configurePrimaryOutput(fs) {
        this._primaryOutput = fs;
    }
}
exports.Step = Step;
_a = JSII_RTTI_SYMBOL_1;
Step[_a] = { fqn: "@aws-cdk/pipelines.Step", version: "1.121.0" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInN0ZXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSx3Q0FBc0M7Ozs7Ozs7Ozs7OztBQUl0QyxNQUFzQixJQUFJOzs7OztJQVN4QjtJQUNFLCtCQUErQjtJQUNmLEVBQVU7UUFBVixPQUFFLEdBQUYsRUFBRSxDQUFROzs7Ozs7UUFUWix1QkFBa0IsR0FBYyxFQUFFLENBQUM7Ozs7Ozs7O1FBR25DLGFBQVEsR0FBWSxLQUFLLENBQUM7UUFReEMsSUFBSSxZQUFLLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxFQUFFO1lBQzFCLE1BQU0sSUFBSSxLQUFLLENBQUMsc0NBQXNDLEVBQUUsR0FBRyxDQUFDLENBQUM7U0FDOUQ7SUFDSCxDQUFDOzs7Ozs7SUFHRCxJQUFXLFlBQVk7UUFDckIsT0FBTyxJQUFJLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3RELENBQUM7Ozs7OztJQUdNLFFBQVE7UUFDYixPQUFPLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDO0lBQ2hELENBQUM7Ozs7Ozs7OztJQUdELElBQVcsYUFBYTtRQUN0Qiw0Q0FBNEM7UUFDNUMsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDO0lBQzdCLENBQUM7Ozs7Ozs7O0lBR1Msb0JBQW9CLENBQUMsRUFBVztRQUN4QyxJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ25DLENBQUM7Ozs7OztJQUdTLHNCQUFzQixDQUFDLEVBQVc7UUFDMUMsSUFBSSxDQUFDLGNBQWMsR0FBRyxFQUFFLENBQUM7SUFDM0IsQ0FBQzs7QUExQ0gsb0JBMkNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVG9rZW4gfSBmcm9tICdAYXdzLWNkay9jb3JlJztcbmltcG9ydCB7IEZpbGVTZXQsIElGaWxlU2V0UHJvZHVjZXIgfSBmcm9tICcuL2ZpbGUtc2V0JztcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgU3RlcCBpbXBsZW1lbnRzIElGaWxlU2V0UHJvZHVjZXIge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgcHVibGljIHJlYWRvbmx5IGRlcGVuZGVuY3lGaWxlU2V0czogRmlsZVNldFtdID0gW107XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICBwdWJsaWMgcmVhZG9ubHkgaXNTb3VyY2U6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBwcml2YXRlIF9wcmltYXJ5T3V0cHV0PzogRmlsZVNldDtcblxuICBjb25zdHJ1Y3RvcihcbiAgICAvKiogSWRlbnRpZmllciBmb3IgdGhpcyBzdGVwICovXG4gICAgcHVibGljIHJlYWRvbmx5IGlkOiBzdHJpbmcpIHtcblxuICAgIGlmIChUb2tlbi5pc1VucmVzb2x2ZWQoaWQpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFN0ZXAgaWQgY2Fubm90IGJlIHVucmVzb2x2ZWQsIGdvdCAnJHtpZH0nYCk7XG4gICAgfVxuICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gIHB1YmxpYyBnZXQgZGVwZW5kZW5jaWVzKCk6IFN0ZXBbXSB7XG4gICAgcmV0dXJuIHRoaXMuZGVwZW5kZW5jeUZpbGVTZXRzLm1hcChmID0+IGYucHJvZHVjZXIpO1xuICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICBwdWJsaWMgdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIGAke3RoaXMuY29uc3RydWN0b3IubmFtZX0oJHt0aGlzLmlkfSlgO1xuICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gIHB1YmxpYyBnZXQgcHJpbWFyeU91dHB1dCgpOiBGaWxlU2V0IHwgdW5kZWZpbmVkIHtcbiAgICAvLyBBY2Nlc3NvciBzbyBpdCBjYW4gYmUgbXV0YWJsZSBpbiBjaGlsZHJlblxuICAgIHJldHVybiB0aGlzLl9wcmltYXJ5T3V0cHV0O1xuICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgcHJvdGVjdGVkIGFkZERlcGVuZGVuY3lGaWxlU2V0KGZzOiBGaWxlU2V0KSB7XG4gICAgdGhpcy5kZXBlbmRlbmN5RmlsZVNldHMucHVzaChmcyk7XG4gIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICBwcm90ZWN0ZWQgY29uZmlndXJlUHJpbWFyeU91dHB1dChmczogRmlsZVNldCkge1xuICAgIHRoaXMuX3ByaW1hcnlPdXRwdXQgPSBmcztcbiAgfVxufSJdfQ==